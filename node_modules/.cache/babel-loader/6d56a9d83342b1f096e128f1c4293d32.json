{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dragon Slayer\\\\Desktop\\\\AddUsers\\\\src\\\\components\\\\Users\\\\AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useReducer } from 'react';\nimport Card from '../UI/Card';\nimport Button from '../UI/Button';\nimport ErrorModal from '../UI/ErrorModal';\nimport styles from './AddUser.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddUser(props) {\n  _s();\n\n  const enteredNameRef = useRef();\n  const enteredAgeRef = useRef();\n  const [error, setError] = useState();\n\n  function addUserHandler(event) {\n    //Allows webpage to not reload\n    event.preventDefault(); //Captures Entered Value & Not Every Keystoke\n\n    const capturedName = enteredNameRef.current.value;\n    const capturedAge = enteredAgeRef.current.value; //Print Nothing if Fields Are Empty\n\n    if (capturedName.trim().length === 0 || capturedAge.trim().length === 0) {\n      setError({\n        title: 'Invalid Input',\n        message: 'Please enter a valid name and age (non-empty values)'\n      });\n      return;\n    } //Print Nothing if Age is Less Than 1\n\n\n    if (+capturedAge < 1) {\n      setError({\n        title: 'Invalid Age',\n        message: 'Please enter a Valid Age (positive integers only)'\n      });\n      return;\n    } //Passing Compiled Data to onAddUser in App.js\n\n\n    props.onAddUser(capturedName, capturedAge); //SHOULD NEVER RESET ON DOM PRACTICALLY\n    //Resets Entered Values to Empty\n\n    enteredAgeRef('');\n    enteredAgeRef('');\n  }\n\n  ;\n\n  function errorHandler() {\n    setError(null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onIgnore: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: styles.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: enteredNameRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \" Age (Years) \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: enteredAgeRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 1\n  }, this);\n}\n\n_s(AddUser, \"wNFXJJoRyITi9/MxgIkjSWmF9+A=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["C:/Users/Dragon Slayer/Desktop/AddUsers/src/components/Users/AddUser.js"],"names":["React","useState","useRef","useReducer","Card","Button","ErrorModal","styles","AddUser","props","enteredNameRef","enteredAgeRef","error","setError","addUserHandler","event","preventDefault","capturedName","current","value","capturedAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,EAAiCC,UAAjC,QAAkD,OAAlD;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAuB;AAAA;;AACnB,QAAMC,cAAc,GAAGR,MAAM,EAA7B;AACA,QAAMS,aAAa,GAAGT,MAAM,EAA5B;AAEA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,EAAlC;;AAEA,WAASa,cAAT,CAAwBC,KAAxB,EAA8B;AAE1B;AACAA,IAAAA,KAAK,CAACC,cAAN,GAH0B,CAK1B;;AACA,UAAMC,YAAY,GAAGP,cAAc,CAACQ,OAAf,CAAuBC,KAA5C;AACA,UAAMC,WAAW,GAAGT,aAAa,CAACO,OAAd,CAAsBC,KAA1C,CAP0B,CAS1B;;AACA,QAAGF,YAAY,CAACI,IAAb,GAAoBC,MAApB,KAA+B,CAA/B,IAAoCF,WAAW,CAACC,IAAZ,GAAmBC,MAAnB,KAA8B,CAArE,EAAuE;AACnET,MAAAA,QAAQ,CAAC;AACLU,QAAAA,KAAK,EAAE,eADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIA;AACH,KAhByB,CAkB1B;;;AACA,QAAG,CAACJ,WAAD,GAAe,CAAlB,EAAoB;AAChBP,MAAAA,QAAQ,CAAC;AACLU,QAAAA,KAAK,EAAE,aADF;AAELC,QAAAA,OAAO,EAAE;AAFJ,OAAD,CAAR;AAIA;AACH,KAzByB,CA0B1B;;;AACAf,IAAAA,KAAK,CAACgB,SAAN,CAAgBR,YAAhB,EAA8BG,WAA9B,EA3B0B,CA6B1B;AACA;;AACAT,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAA,IAAAA,aAAa,CAAC,EAAD,CAAb;AACH;;AAAA;;AAED,WAASe,YAAT,GAAuB;AACnBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH;;AAEL,sBACA;AAAA,eACKD,KAAK,iBAAI,QAAC,UAAD;AACR,MAAA,KAAK,EAAEA,KAAK,CAACW,KADL;AAER,MAAA,OAAO,EAAEX,KAAK,CAACY,OAFP;AAGR,MAAA,QAAQ,EAAEE;AAHF;AAAA;AAAA;AAAA;AAAA,YADd,eAMI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEnB,MAAM,CAACoB,KAAxB;AAAA,6BACA;AAAM,QAAA,QAAQ,EAAEb,cAAhB;AAAA,gCAEI;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AACI,UAAA,EAAE,EAAC,UADP;AAEI,UAAA,IAAI,EAAC,MAFT;AAGI,UAAA,GAAG,EAAEJ;AAHT;AAAA;AAAA;AAAA;AAAA,gBAHJ,eASI;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBATJ,eAUI;AACI,UAAA,EAAE,EAAC,KADP;AAEI,UAAA,IAAI,EAAC,QAFT;AAGI,UAAA,GAAG,EAAEC;AAHT;AAAA;AAAA;AAAA;AAAA,gBAVJ,eAeI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BC;;GAzEQH,O;;KAAAA,O;AA2ET,eAAeA,OAAf","sourcesContent":["import React, {useState, useRef, useReducer} from 'react';\r\nimport Card from '../UI/Card';\r\nimport Button from '../UI/Button';\r\nimport ErrorModal from '../UI/ErrorModal';\r\nimport styles from './AddUser.module.css';\r\n\r\n\r\nfunction AddUser(props){\r\n    const enteredNameRef = useRef();\r\n    const enteredAgeRef = useRef();\r\n\r\n    const [error, setError] = useState();\r\n\r\n    function addUserHandler(event){\r\n        \r\n        //Allows webpage to not reload\r\n        event.preventDefault(); \r\n\r\n        //Captures Entered Value & Not Every Keystoke\r\n        const capturedName = enteredNameRef.current.value;\r\n        const capturedAge = enteredAgeRef.current.value;\r\n\r\n        //Print Nothing if Fields Are Empty\r\n        if(capturedName.trim().length === 0 || capturedAge.trim().length === 0){  \r\n            setError({\r\n                title: 'Invalid Input',\r\n                message: 'Please enter a valid name and age (non-empty values)'\r\n            });\r\n            return;\r\n        }\r\n        \r\n        //Print Nothing if Age is Less Than 1\r\n        if(+capturedAge < 1){\r\n            setError({\r\n                title: 'Invalid Age',\r\n                message: 'Please enter a Valid Age (positive integers only)'\r\n            });\r\n            return;\r\n        }\r\n        //Passing Compiled Data to onAddUser in App.js\r\n        props.onAddUser(capturedName, capturedAge);\r\n\r\n        //SHOULD NEVER RESET ON DOM PRACTICALLY\r\n        //Resets Entered Values to Empty\r\n        enteredAgeRef('');\r\n        enteredAgeRef('');\r\n    };\r\n\r\n    function errorHandler(){\r\n        setError(null);\r\n    }\r\n\r\nreturn( \r\n<div> \r\n    {error && <ErrorModal \r\n      title={error.title}\r\n      message={error.message}\r\n      onIgnore={errorHandler} />\r\n    }\r\n    <Card className={styles.input}> \r\n    <form onSubmit={addUserHandler}>\r\n        \r\n        <label htmlFor=\"username\">Username </label>\r\n        <input \r\n            id=\"username\" \r\n            type=\"text\"\r\n            ref={enteredNameRef}/>\r\n            \r\n\r\n        <label htmlFor=\"age\"> Age (Years) </label>\r\n        <input \r\n            id=\"age\" \r\n            type=\"number\"\r\n            ref={enteredAgeRef}/>\r\n            \r\n        <Button type=\"submit\">Add User</Button>\r\n    </form>\r\n    </Card>\r\n</div>\r\n    );\r\n}\r\n\r\nexport default AddUser;"]},"metadata":{},"sourceType":"module"}